# config/packages/security.yaml
security:
  # https://symfony.com/doc/current/security/experimental_authenticators.html
  enable_authenticator_manager: true

  role_hierarchy:
    ROLE_ADMIN: [ ROLE_ADMIN, ROLE_USER ]
    ROLE_USER: [ ROLE_USER ]

  # https://symfony.com/doc/current/security.html#c-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
  #    App\Entity\User:
  #      algorithm: auto

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    database_user_provider:
      entity:
        class: App\Entity\User
        property: username
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      lazy: true
      provider: database_user_provider
      custom_authenticator: App\Security\LoginAuthenticator
      logout:
        path: app_logout
        target: login
        # where to redirect after logout

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
  # - { path: ^/admin, roles: ROLE_ADMIN }
     - { path: ^/addjob, roles: ROLE_USER }
     - { path: ^/list, roles: ROLE_USER }
     - { path: ^/viewDetails/, roles: ROLE_USER }
     - { path: ^/editJob/, roles: ROLE_USER }
     - { path: ^/application/, roles: ROLE_USER }